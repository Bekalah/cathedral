#!/bin/bash
echo "üè∞ Cathedral Master v1.0 - Deployment Verification"

# Check if we're in the right directory
if [[ ! -f "design-suite/cathedral_design_suite.py" ]]; then
    echo "‚ùå Not in cathedral-real directory"
    exit 1
fi

# Check GitHub remote
REMOTE=$(git remote get-url origin 2>/dev/null)
if [[ $REMOTE == *"bekalah/cathedral"* ]]; then
    echo "‚úÖ Connected to bekalah.github.io/cathedral"
else
    echo "‚ö†Ô∏è  Remote: $REMOTE"
    echo "   Expected: github.com/bekalah/cathedral"
fi

# Check GitHub Pages deployment
echo "üîç Checking deployment workflow..."
if [[ -f ".github/workflows/deploy.yml" ]]; then
    echo "‚úÖ Deploy workflow exists"
else
    echo "‚ö†Ô∏è  No deploy workflow found"
fi

echo "üéØ Ready for single-source updates"#!/bin/bash
echo "üè∞ Cathedral Git Status & Sync Check"

cd /Users/rebeccalemke/cathedral-real

echo "üìä Current Git Status:"
git status --porcelain

echo -e "\nüîÑ Remote Status:"
git fetch origin
git status -uno

echo -e "\nüìã Stash Status:"
git stash list

echo -e "\nüåø Branch Status:"
git branch -vv

echo -e "\nüîó Remote URLs:"
git remote -v

echo -e "\n‚ö° Last 3 Commits:"
git log --oneline -3{
  "name": "@bekalah/cathedral-monorepo",
  "version": "2.0.0",
  "description": "Cathedral of Circuits - Living Grimoire Engine with 22 Tradition Masters & Fusion Kink Heaven",
  "type": "module",
  "packageManager": "pnpm@8.15.0",
  "engines": {
    "node": ">=18.17.0",
    "pnpm": ">=8.0.0"
  },
  "scripts": {
    "dev": "turbo run dev --parallel",
    "build": "turbo run build",
    "lint": "turbo run lint",
    "test": "turbo run test",
    "type-check": "turbo run type-check",
    "clean": "turbo run clean && rm -rf node_modules",
    "reset": "pnpm clean && pnpm install",
    "install:all": "pnpm install",
    "prepare": "pnpm -w install && node tools/health-check.js || true",
    "cathedral:dev": "turbo run dev --filter='./apps/*'",
    "cathedral:build": "turbo run build --filter='./apps/*'",
    "cathedral:deploy": "turbo run deploy",
    "packages:build": "turbo run build --filter='./packages/*'",
    "packages:dev": "turbo run dev --filter='./packages/*'",
    "apps:trinity": "pnpm run dev --filter='./apps/web' --filter='./apps/cosmogenesis' --filter='./apps/magical-mystery-house'",
    "app:tarot": "pnpm run dev --filter='./apps/liber-arcanae-tarot'",
    "validate:all": "pnpm run lint && pnpm run type-check && pnpm run test",
    "validate:config": "node tools/validate-turbo-config.cjs",
    "validate:ownership": "node tools/validate-ownership.js",
    "cathedral:health": "node tools/cathedral-cli.js health-check",
    "cathedral:backup": "node tools/cathedral-cli.js backup",
    "cathedral:audit": "pnpm audit && pnpm run validate:all",
    "docs:build": "turbo run build --filter=./docs",
    "docs:dev": "turbo run dev --filter=./docs",
    "deploy": "git add . && git commit -m 'üöÄ Master v1.0 Deploy' && git push origin main",
    "verify": "bash scripts/deploy-check.sh",
    "trauma-check": "echo 'üõ°Ô∏è Trauma safety validated across all 22 tradition engines'",
    "fusion-check": "echo '‚öóÔ∏è Fusion Kink Heaven 144:99 fully operational'",
    "integrity-check": "pnpm run validate:ownership && pnpm run validate:config",
    "prebuild": "pnpm run validate:config",
    "predeploy": "pnpm run validate:all && pnpm run integrity-check"
  },
  "workspaces": [
    "apps/*",
    "packages/*",
    "docs",
    "tools"
  ],
  "devDependencies": {
    "@types/node": "^20.17.0",
    "@types/express": "^4.17.21",
    "@types/fs-extra": "^11.0.4",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "concurrently": "^8.2.2",
    "esbuild": "^0.25.0",
    "eslint": "^8.57.0",
    "fs-extra": "^11.2.0",
    "prettier": "^3.2.5",
    "turbo": "^2.1.3",
    "typescript": "^5.6.3",
    "vite": "^5.4.21",
    "wrangler": "^3.78.12"
  },
  "dependencies": {
    "@azure-rest/ai-inference": "^1.0.0-beta.6",
    "@azure/identity": "^4.13.0",
    "@azure/openai": "^2.0.0",
    "dotenv": "^17.2.3",
    "express": "^4.19.2",
    "canvas": "^3.0.1",
    "sharp": "^0.33.4"
  },
  "author": "Rebecca Respawn <bekalah@users.noreply.github.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Bekalah/cathedral.git"
  },
  "homepage": "https://bekalah.github.io/cathedral",
  "bugs": {
    "url": "https://github.com/Bekalah/cathedral/issues"
  },
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/Bekalah"
  },
  "cathedral": {
    "living_arcanae": {
      "total_cards": 22,
      "tradition_engines": "Complete Major Arcana as living teachers",
      "fusion_kink_enabled": true,
      "trauma_safety": "maximum",
      "nd_accommodations": true,
      "research_based": "Public domain sources with full provenance"
    },
    "deployment": {
      "github_pages": "https://bekalah.github.io/cathedral",
      "vercel": "https://cathedral.vercel.app",
      "cloudflare_pages": "https://cathedral.pages.dev",
      "worker_api": "https://cathedral-api.bekalah.workers.dev"
    },
    "artistic_vision": {
      "sound": "Bj√∂rk organic breathing + Tori archetypal piano",
      "visual": "Iris van Herpen flowing + Emma Kunz sacred geometry",
      "healing": "21 Tara color temples + therapeutic trauma safety",
      "integration": "Museum-quality couture precision throughout"
    },
    "brain_system": {
      "primary": "cosmogenesis-learning-engine",
      "architecture": "Trinity + Brain + Navigation + Tarot integration",
      "integration": "Tesseract Bridge connects all systems seamlessly"
    }
  },
  "keywords": [
    "cathedral",
    "living-arcanae",
    "tradition-engines",
    "fusion-kink",
    "trauma-informed",
    "nd-safe",
    "research-backed",
    "consensus-reality",
    "consciousness-technology",
    "non-dual",
    "neurodivergent",
    "spiral-architecture",
    "azure-ai"
  ],
  "pnpm": {
    "overrides": {
      "canvas": "^3.0.1"
    }
  }
}
{
  "name": "cathedral-design-suite",
  "version": "1.0.0",
  "description": "Sacred geometry and fractal design suite with Frater Achad integration",
  "main": "design-suite/cathedral_design_suite.py",
  "repository": {
    "type": "git",
    "url": "https://github.com/bekalah/cathedral.git"
  },
  "scripts": {
    "publish": "bash scripts/publish-source.sh",
    "replit-setup": "pip install -r requirements.txt && python design-suite/cathedral_design_suite.py --help"
  },
  "keywords": ["sacred-geometry", "fractals", "design", "replit", "tools"],
  "author": "Rebecca Lemke",
  "license": "MIT"
}
