name: Deploy Avalon Labs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and test all apps
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m venv .venv
          .venv/bin/pip install numpy matplotlib pillow

      - name: Validate Python Suite (optional)
        run: |
          .venv/bin/python tools/validate/design_suite_smoketest.py || true
          .venv/bin/python tools/validate/achad_integration_smoketest.py || true
        continue-on-error: true

      - name: Export JSON Data (optional)
        run: |
          .venv/bin/python tools/export/combined_export.py || echo "JSON export skipped"
        continue-on-error: true

      - name: Install Node dependencies
        run: pnpm install

      - name: Build web (Next.js static export)
        run: |
          pnpm --filter @bekalah/cathedral-web run export

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: success() || failure()

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./apps/web/out"
        if: success() || failure()

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Generate Avalon data
      run: pnpm nx run core:generate-data

    - name: Build web app
      run: pnpm nx run web:build

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
        action: "upload"
        app_location: "apps/web"
        output_location: "out"
        config_file: "apps/web/azure-static-web-apps.yml"
