name: Pages (owner-only, no external actions)

on:
  push:
    branches: [ main ]
    paths:
      - "index.html"
      - "js/**"
      - "data/**"
      - "README_RENDERER.md"
  workflow_dispatch:

env:
  NODE_VERSION: "20.12.2"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Clone repository (manual)
        run: |
          set -e
          git clone --depth=1 --branch "${GITHUB_REF_NAME}" \
            "https://github.com/${GITHUB_REPOSITORY}.git" repo
          cd repo
          echo "REPO_ROOT=$PWD" >> "$GITHUB_ENV"

      - name: Install Node and pnpm (manual)
        working-directory: repo
        run: |
          set -e
          curl -fsSL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz" -o node.tar.xz
          tar -xJf node.tar.xz
          echo "$PWD/node-v${NODE_VERSION}-linux-x64/bin" >> "$GITHUB_PATH"
          corepack enable
          corepack prepare pnpm@9 --activate
          node -v
          pnpm -v

      - name: Install dependencies (best-effort)
        working-directory: repo
        run: |
          set -e
          if [ -f package.json ]; then
            pnpm install || echo "pnpm install skipped (no lockfile)"
          fi

      - name: Stage site
        working-directory: repo
        run: |
          set -e
          mkdir -p .publish
          cp index.html .publish/
          cp -r js .publish/
          cp -r data .publish/
          cp README_RENDERER.md .publish/
          if [ -d apps/cathedral-web ]; then
            mkdir -p .publish/apps
            cp -r apps/cathedral-web .publish/apps/
          fi
          touch .publish/.nojekyll

      - name: Publish (gh-pages branch)
        working-directory: repo
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@github.com"

          if git ls-remote --exit-code origin gh-pages; then
            git fetch origin gh-pages:gh-pages
            git switch gh-pages
          else
            git checkout --orphan gh-pages
          fi

          rm -rf ./*
          cp -r ../.publish/* .
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to publish."
          else
            git commit -m "Deploy ${GITHUB_SHA}"
            git push origin gh-pages --force
          fi
