name: Pages (build & deploy with URL echo)

on:
  push:
    branches: [ main ]
    paths:
      - "apps/web/**"
      - "packages/**"
      - "data/**"
      - "docs/**"
  workflow_dispatch:

env:
  APP_DIR: apps/web           # ← where your web app lives
  BUILD_DIR: dist             # Vite: dist | Next export: out
  NODE_VERSION: "20"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub-owned)
        uses: actions/checkout@v4

      - name: Setup Node (GitHub-owned)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm -v

      - name: Install deps
        run: pnpm install --frozen-lockfile

      # If you have a bot step that produces dist/codex.json, run it here
      # - name: Build cathedral-bot
      #   run: pnpm -w --filter @cathedral/cathedral-bot build

      - name: Build web
        run: |
          pnpm -w --filter web build
          # Vite should emit apps/web/dist; Next export → set BUILD_DIR=out

      - name: Upload Pages artifact (GitHub-owned)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.APP_DIR }}/${{ env.BUILD_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages (GitHub-owned)
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Echo live URL in logs
        run: echo "Live site → ${{ steps.deploy.outputs.page_url }}"

      - name: Add URL to Job Summary
        run: |
          echo "## ✅ Deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **${{ steps.deploy.outputs.page_url }}**" >> $GITHUB_STEP_SUMMARY
